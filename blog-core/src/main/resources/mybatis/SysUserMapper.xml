<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ithome.presistence.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.ithome.presistence.beans.SysUser">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="blog" jdbcType="VARCHAR" property="blog" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="source" jdbcType="CHAR" property="source" />
    <result column="privacy" jdbcType="TINYINT" property="privacy" />
    <result column="notification" jdbcType="TINYINT" property="notification" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="experience" jdbcType="INTEGER" property="experience" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, username, password, nickname, mobile, email, qq, birthday, gender, avatar, user_type, 
    company, blog, location, source, privacy, notification, score, experience, reg_ip, 
    last_login_ip, last_login_time, login_count, remark, status, create_time, update_time
  </sql>

  <select id="findPageBreakByCondition" parameterType="com.ithome.bussiness.vo.UserConditionVO" resultMap="BaseResultMap">
    SELECT
    s.*
    FROM
    sys_user s
    WHERE
    1 = 1
    <if test="keywords != null and keywords != '' ">
      AND
      (
      s.nickname LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.mobile  LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.username LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.password LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.email LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.qq LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%') or
      s.remark LIKE CONCAT('%',#{keywords , jdbcType=VARCHAR},'%')
      )
    </if>
    <!-- 查询用户信息 -->
    <if test="user != null">
      <if test="user.id!=null">
        AND s.id = #{user.id}
      </if>
      <if test="user.gender!=null">
        AND s.gender = #{user.gender}
      </if>
      <if test="user.userType!=null">
        AND s.user_type = #{user.userType}
      </if>
      <if test="user.username!=null">
        AND s.username = #{user.username}
      </if>
      <if test="user.password!=null">
        AND s.password = #{user.password}
      </if>
      <if test="user.lastLoginIp!=null">
        AND s.last_login_ip = #{user.lastLoginIp}
      </if>
      <if test="user.lastLoginTime!=null">
        AND s.last_login_time = #{user.lastLoginTime}
      </if>
    </if>
    GROUP BY
    s.id
    ORDER BY
    s.create_time DESC
  </select>


  <select id="listByRoleId" parameterType="Long" resultMap="BaseResultMap">
    SELECT
      s.id,
      s.username,
      s.nickname
    FROM
      sys_user s
        INNER JOIN sys_user_role sur ON  sur.user_id = s.id
    WHERE
      sur.role_id = #{roleId}
  </select>
</mapper>